# backend/app/tasks/monitoring_tasks.py
from app.tasks.celery import celery_app
from app.core.database import SessionLocal
from app.services.monitoring_service import MonitoringService
from app.services.telegram_service import TelegramService

@celery_app.task
def check_all_services_task():
    """–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"""
    db = SessionLocal()
    monitoring_service = MonitoringService(db)
    telegram_service = TelegramService()
    
    try:
        results = monitoring_service.check_all_services()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö
        offline_services = [r for r in results if r['status'] == 'offline']
        if offline_services:
            message = "üî¥ <b>–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–∏—Å–∞–º–∏:</b>\n\n"
            for service in offline_services:
                message += f"‚Ä¢ {service['service']} - offline\n"
            
            import asyncio
            loop = asyncio.new_event_loop()
            asyncio.set_event_loop(loop)
            loop.run_until_complete(telegram_service.send_notification(message))
            loop.close()
        
        return {
            "checked_services": len(results),
            "online": len([r for r in results if r['status'] == 'online']),
            "offline": len(offline_services)
        }
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–µ—Ä–≤–∏—Å–æ–≤: {e}")
        return {"error": str(e)}
    finally:
        db.close()

@celery_app.task
def update_service_metrics_task():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"""
    db = SessionLocal()
    
    try:
        from app.models.service import Service
        from datetime import datetime
        
        services = db.query(Service).all()
        
        for service in services:
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Å–±–æ—Ä–∞ –º–µ—Ç—Ä–∏–∫
            # –Ω–∞–ø—Ä–∏–º–µ—Ä, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU, –ø–∞–º—è—Ç–∏ –∏ —Ç.–¥.
            pass
            
        db.commit()
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –º–µ—Ç—Ä–∏–∫: {e}")
    finally:
        db.close()