import logging
from telegram import Bot
from telegram.error import TelegramError
from app.core.config import settings

logger = logging.getLogger(__name__)

class TelegramService:
    _bot = None
    
    @classmethod
    def get_bot(cls):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞"""
        if cls._bot is None and settings.TELEGRAM_BOT_TOKEN:
            cls._bot = Bot(token=settings.TELEGRAM_BOT_TOKEN)
        return cls._bot
    
    @classmethod
    def send_message(cls, chat_id: str, message: str) -> bool:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram"""
        try:
            bot = cls.get_bot()
            if not bot:
                logger.warning("Telegram bot not configured")
                return False
            
            bot.send_message(chat_id=chat_id, text=message)
            logger.info(f"Telegram message sent to {chat_id}")
            return True
            
        except TelegramError as e:
            logger.error(f"Telegram message sending failed: {e}")
            return False
    
    @classmethod
    def send_admin_alert(cls, message: str) -> bool:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º"""
        if not settings.TELEGRAM_ADMIN_CHAT_ID:
            logger.warning("Telegram admin chat ID not configured")
            return False
        
        return cls.send_message(settings.TELEGRAM_ADMIN_CHAT_ID, f"üö® {message}")
    
    @classmethod
    def send_service_status_alert(cls, service_name: str, status: str):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞"""
        message = f"–°–µ—Ä–≤–∏—Å {service_name} –∏–∑–º–µ–Ω–∏–ª —Å—Ç–∞—Ç—É—Å: {status}"
        return cls.send_admin_alert(message)
    
    @classmethod
    def send_first_blood_alert(cls, challenge_name: str, team_name: str, user_name: str):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–≤–æ–π –∫—Ä–æ–≤–∏"""
        message = f"üéâ –ü–µ—Ä–≤–∞—è –∫—Ä–æ–≤—å! {user_name} –∏–∑ –∫–æ–º–∞–Ω–¥—ã {team_name} —Ä–µ—à–∏–ª –∑–∞–¥–∞–Ω–∏–µ {challenge_name}"
        return cls.send_admin_alert(message)