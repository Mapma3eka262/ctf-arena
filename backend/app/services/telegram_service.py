import requests
from app.core.config import settings

class TelegramService:
    def __init__(self):
        self.bot_token = settings.TELEGRAM_BOT_TOKEN
        self.chat_id = settings.TELEGRAM_CHAT_ID

    async def send_notification(self, message: str):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram"""
        if not self.bot_token or not self.chat_id:
            return

        url = f"https://api.telegram.org/bot{self.bot_token}/sendMessage"
        payload = {
            "chat_id": self.chat_id,
            "text": message,
            "parse_mode": "HTML"
        }

        try:
            response = requests.post(url, json=payload)
            return response.status_code == 200
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
            return False

    async def send_flag_submission_notification(self, username: str, challenge_title: str, status: str):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–ª–∞–≥–∞"""
        message = f"""
üö© <b>–ù–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–ª–∞–≥–∞</b>

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}
üéØ –ó–∞–¥–∞–Ω–∏–µ: {challenge_title}
üìä –°—Ç–∞—Ç—É—Å: {status}
        """
        await self.send_notification(message)

    async def send_first_blood_notification(self, username: str, challenge_title: str, team_name: str):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ First Blood"""
        message = f"""
ü©∏ <b>First Blood!</b>

üë§ –ò–≥—Ä–æ–∫: {username}
üè¥‚Äç‚ò†Ô∏è –ö–æ–º–∞–Ω–¥–∞: {team_name}
üéØ –ó–∞–¥–∞–Ω–∏–µ: {challenge_title}

–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø–µ—Ä–≤–æ–π –∫—Ä–æ–≤—å—é! üéâ
        """
        await self.send_notification(message)