#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è CyberCTF Arena
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ Python path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.core.database import engine, Base, init_db
from app.core.config import settings

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î"""
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö CyberCTF Arena...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        init_db()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        create_test_data()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        sys.exit(1)

def create_test_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    try:
        from sqlalchemy.orm import Session
        from app.core.database import SessionLocal
        from app.models.user import User
        from app.models.team import Team
        from app.models.challenge import Challenge
        from app.core.security import get_password_hash
        
        db = SessionLocal()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        team = Team(name="Test Team", score=0)
        db.add(team)
        db.flush()  # –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–º–∞–Ω–¥—ã
        
        user = User(
            username="testuser",
            email="test@example.com",
            hashed_password=get_password_hash("testpassword"),
            is_captain=True,
            team_id=team.id
        )
        db.add(user)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏–π
        challenges = [
            Challenge(
                title="Web Security 101",
                description="–ë–∞–∑–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –ø–æ –≤–µ–±-–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
                category="WEB",
                difficulty="easy",
                points=100,
                flag="CTF{web_security_basic}"
            ),
            Challenge(
                title="Crypto Challenge",
                description="–ó–∞–¥–∞–Ω–∏–µ –ø–æ –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏–∏",
                category="Crypto", 
                difficulty="medium",
                points=200,
                flag="CTF{crypto_is_fun}"
            ),
            Challenge(
                title="Forensics Investigation",
                description="–†–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —É–ª–∏–∫",
                category="Forensics",
                difficulty="hard", 
                points=300,
                flag="CTF{forensics_master}"
            )
        ]
        
        for challenge in challenges:
            db.add(challenge)
        
        db.commit()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã")
        
    except Exception as e:
        print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: {e}")
    finally:
        db.close()

if __name__ == "__main__":
    main()
